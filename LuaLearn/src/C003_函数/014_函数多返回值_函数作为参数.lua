---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/1/18 16:57
---
--[[
    函数的多返回值：
        一个函数返回多个值，可以使用多个变量直接接收。
            eg：function GetNumber()
                    return 100,200
                end
                num1,num2 = GetNumber()
                print(num1,num2)
        函数多返回值性质：
            1、如果一个函数调用在最后，或者仅有一个表达式，则lua会保留尽可能多的返回值，用于匹配
            2、如果一个函数没有返回数值，或者没有足够多的返回数值，那么lua会用nil来补充缺失数值。
    函数的赋值
        函数可以作为数据类型进行赋值，也可以作为参数进行传递(相当于C#中的委托)
]]
print("学习函数的多返回值特性")
function GetNumber()
    return 10,20,30,40
end
--测试接收
res1,res2,res3 = GetNumber();
print("res1="..res1..",res2="..res2..",res3="..res3) -- res1=10,res2=20,res3=30
res1,res2,res3,res4,res5 = GetNumber()
print("res1="..res1..",res2="..res2..",res3="..res3..",res4="..res4..",res5=",res5) --res1=10,res2=20,res3=30,res4=40,res5=	nil
--学习函数作为参数
function PrintInfo(result)
    print("计算的结果")
    print("printInfo result="..result)
end
function AddNum(num1,num2, PrintFunc)
    local result = num1 + num2
    PrintFunc(result)
end

function SubNum(num1,num2,PrintFunc)
    local result = num1 - num2
    PrintFunc(result)
end
AddNum(1,4,PrintInfo) --加法函数 PrintInfo就是作为参数进行调用
SubNum(1,4,PrintInfo) --减法函数 PrintInfo就是作为参数进行调用