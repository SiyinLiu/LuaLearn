---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/4/13 15:01
---
--[[
字符串不变性原理
    Lua字符串具有不变性原理，与C#/Java语言类似。
    lua字符串每一次链接操作之后，都会产生新的字符串（不同于原来的）。这样不断连接字符串，就会不断产生大量新的字符串，且需要大量复制
    操作。随着链接操作的不断增加，字符串越来越大，复制操作也就也来越耗时，所以执行速度就会明显降低。
]]
print("==========示例1========")
local strs = {} --存放原始大量数据
local result = ""
local startTime = os.clock() --开始（计算的）的时间
local endTime = nil             --结束（计算）的时间
local useTime = nil             --实验结果实际使用的时间
for i = 1, 70000 do
    strs[i] = "hello world "
end
--print("测试大量字符串链接工作")
--for index, str in ipairs(strs) do
--    result = result..str
--end
print("==========字符串改进字符串链接效率=======")
result = table.concat(strs)
endTime = os.clock()
useTime = endTime - startTime
print("字符串链接之后：result 长度:"..#result)
print("总耗时 userTime:"..useTime)