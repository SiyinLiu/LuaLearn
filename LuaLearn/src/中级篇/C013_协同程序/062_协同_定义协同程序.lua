---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/4/20 10:40
---
--[[
什么是"协同程序"
    Lua所支持的协程全被称作协同式多线程(collaborative multithreading)
    Lua为每个coroutine提供一个独立的运行线路，然而与多线程不同的地方是，coroutine只有在显式调用yield函数后才被挂起，同一时间内
    只有一个协程正在运行。
    与真正的多线程的区别：
        线程与协同程序的主要区别在于，一个具有多个线程的程序可以同时运行几个线程，而协同程序却需要彼此协作的运行。
        也就是说多个协同程序在任意时刻，只能运行一个协同程序，只有当正在运行的协同程序显式的要求挂起时，它的执行才会暂停。
]]
--定义一个协同程序
cor1 = coroutine.create(
    function()
            for i = 1, 10 do
                print("协同一：",i)
                if (i == 5) then
                    coroutine.yield()           --线程挂起
                end
            end
        end
)
--测试
print("cor 类型",type(cor1))                     --output: cor 类型	thread
coroutine.resume(cor1)                          --启动协程
--coroutine.resume(cor1)                        --再次启动会继续运行协程