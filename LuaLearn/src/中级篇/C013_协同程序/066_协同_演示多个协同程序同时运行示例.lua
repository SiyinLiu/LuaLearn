---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/4/21 14:27
---
--[[
演示多个协同同时执行逻辑
    综合运用协同的api(创建、挂起、状态控制等),完成多个协同之间”同时“完成工作的任务。



]]

--演示示例: 两个协同程序，同时完成各自的例子
state_A = "Running"
state_B = "Running"
--定义两个协同
cor_A = coroutine.create(
        function()
            for i = 1, 100 do
                print("任务一:",i)
                if(i % 5 == 0) then
                    coroutine.yield()           --线程挂起
                end
            end
            print("任务一结束")
            print(coroutine.status(cor_A))
            state_A = "End"
        end
)

cor_B = coroutine.create(
        function()
            for i = 1, 100 do
                print("任务二:",i)
                if(i % 6 == 0) then
                    coroutine.yield()           --线程挂起
                end
            end
            print("任务二结束")
            print(coroutine.status(cor_B))
            state_B = "End"
        end
)
--测试两个协同，要求两个协同在宏观上"同时运行"
while(state_A ~= "End" or state_B ~= "End") do
    if (coroutine.status(cor_A) == "suspended") then
        coroutine.resume(cor_A)
    end
    if(coroutine.status(cor_B) == "suspended") then
        coroutine.resume(cor_B)
    end
end
print(coroutine.status(cor_A))          --查看协同最后的状态
print(coroutine.status(cor_B))